package pulsar

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestCRC16(t *testing.T) {
	result := crc16Calc([]byte{0x12, 0x34, 0x56, 0x78, 0x01, 0x0E, 0x02, 0x00, 0x00, 0x00, 0x5E, 0xA4})
	assert.Equal(t, byte(0x41), result[0])
	assert.Equal(t, byte(0x63), result[1])
}

func TestValidateResponse(t *testing.T) {
	assert.NoError(t, validateResponse([]byte{0x12, 0x34, 0x56, 0x78, 0x01, 0x12, 0x00, 0x00, 0x40, 0x70, 0x3D, 0x0A, 0x01, 0x40, 0x5E, 0xA4, 0x82, 0x37}, []byte{0x12, 0x34, 0x56, 0x78}, []byte{0x5E, 0xA4}))
}

func TestExtractMeterValue(t *testing.T) {
	assert.Equal(t, float64(11.73), extractMeterValue([]byte{0x08, 0x54, 0x70, 0x90, 0x01, 0x0e, 0xd2, 0x2d, 0x00, 0x00, 0x5e, 0xa4, 0x96, 0x62}))
}

func TestParseAddress(t *testing.T) {
	parsed, err := parseAddress("8547090")
	require.NoError(t, err)
	assert.Equal(t, []byte{0x08, 0x54, 0x70, 0x90}, parsed)
}
